/*
 * Copyright IBM Corp. 2018 All Rights Reserved.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

apply plugin: 'idea'
apply plugin: 'eclipse-wtp'
version = '2.4.1'


// If the nightly property is set, then this is the scheduled main 
// build - and we should publish this to artifactory
//
// Use the .dev.<number> format to match Maven convention
if (properties.containsKey('NIGHTLY')) {
    version = version + '.dev.' + getDate()
    ext.nightly = true   // set property for use in subprojects
} else {
    ext.nightly = false
}

allprojects {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url "https://www.jitpack.io" }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    group = 'org.hyperledger.fabric-chaincode-java'
    version = rootProject.version


    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        implementation group: 'commons-cli', name: 'commons-cli', version: '1.4'
        implementation group: 'commons-logging', name: 'commons-logging', version: '1.2'
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.1'
        testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.1'

        testImplementation group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
        testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.23.0'
        testImplementation group: 'com.github.stefanbirkner', name: 'system-rules', version: 'system-rules-1.17.0'

        testCompileOnly group: 'junit', name: 'junit', version: '4.12'
        testRuntimeOnly group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.3.1'
        testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.9.1'
    }

    if (!it.name.equals('fabric-chaincode-protos')) {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:all,-try"
        }
    }

    test {
        useJUnitPlatform()
    }

}

task printVersionName() {
    println rootProject.version
}

// Get the date in the reverse format for sorting
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return formattedDate
}
